# utils/products.py

import pandas as pd
import os

PRODUCTS_PATH = "storage/products.csv"

def get_product_info(product_name: str) -> str:
    if not os.path.exists(PRODUCTS_PATH):
        return "‚ö†Ô∏è –¢–∞–±–ª–∏—Ü—è —Ç–æ–≤–∞—Ä—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞."

    df = pd.read_csv(PRODUCTS_PATH)
    if "–ù–∞–∑–≤–∞–Ω–∏–µ" not in df.columns:
        return "‚ö†Ô∏è –£ —Ç–∞–±–ª–∏—Ü—ñ –Ω–µ–º–∞—î –∫–æ–ª–æ–Ω–∫–∏ '–ù–∞–∑–≤–∞–Ω–∏–µ'."

    match = df[df["–ù–∞–∑–≤–∞–Ω–∏–µ"].str.lower() == product_name.lower()]
    if match.empty:
        return f"‚ùå –¢–æ–≤–∞—Ä '{product_name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."

    row = match.iloc[0]
    return "\n".join([f"‚Ä¢ {col}: {row[col]}" for col in df.columns])

def add_product(product_name: str, quantity: int, description: str, price: float) -> str:
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç –≤ —Ç–∞–±–ª–∏—Ü—É products.csv.

    :param product_name: –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
    :param quantity: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ
    :param description: –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
    :param price: –¶–µ–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞
    :return: –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–ª–∏ –æ—à–∏–±–∫–µ
    """
    if not os.path.exists(PRODUCTS_PATH):
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        df = pd.DataFrame(columns=["–ù–∞–∑–≤–∞–Ω–∏–µ", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", "–û–ø–∏—Å–∞–Ω–∏–µ", "–¶–µ–Ω–∞"])
        df.to_csv(PRODUCTS_PATH, index=False)

    df = pd.read_csv(PRODUCTS_PATH)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø—Ä–æ–¥—É–∫—Ç —Å —Ç–∞–∫–∏–º –∂–µ –Ω–∞–∑–≤–∞–Ω–∏–µ–º
    if not df.empty and product_name in df["–ù–∞–∑–≤–∞–Ω–∏–µ"].values:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–¥—É–∫—Ç
        idx = df[df["–ù–∞–∑–≤–∞–Ω–∏–µ"] == product_name].index[0]
        df.at[idx, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"] = quantity
        df.at[idx, "–û–ø–∏—Å–∞–Ω–∏–µ"] = description
        df.at[idx, "–¶–µ–Ω–∞"] = price
        df.to_csv(PRODUCTS_PATH, index=False)
        return f"‚úÖ –ü—Ä–æ–¥—É–∫—Ç '{product_name}' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω."

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç
    new_product = {
        "–ù–∞–∑–≤–∞–Ω–∏–µ": product_name,
        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": quantity,
        "–û–ø–∏—Å–∞–Ω–∏–µ": description,
        "–¶–µ–Ω–∞": price
    }
    df = pd.concat([df, pd.DataFrame([new_product])], ignore_index=True)
    df.to_csv(PRODUCTS_PATH, index=False)

    return f"‚úÖ –ü—Ä–æ–¥—É–∫—Ç '{product_name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω."

def list_all_products() -> str:
    if not os.path.exists(PRODUCTS_PATH):
        return "‚ö†Ô∏è –¢–∞–±–ª–∏—Ü—è —Ç–æ–≤–∞—Ä—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞."

    df = pd.read_csv(PRODUCTS_PATH)
    if df.empty:
        return "üì¶ –¢–∞–±–ª–∏—Ü—è —Ç–æ–≤–∞—Ä—ñ–≤ –ø–æ—Ä–æ–∂–Ω—è."

    result = "üßæ –ù–∞—è–≤–Ω—ñ —Ç–æ–≤–∞—Ä–∏:\n"
    for _, row in df.iterrows():
        result += f"- {row['–ù–∞–∑–≤–∞–Ω–∏–µ']}: {row['–¶–µ–Ω–∞']} –≥—Ä–Ω (–≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ: {row['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ']})\n"
    return result.strip()
